<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>netstat - 分类 - 来来往往</title>
    <link>https://daizelai.github.io/categories/netstat/</link>
    <description>netstat - 分类 - 来来往往</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 19 Oct 2016 21:14:10 &#43;0800</lastBuildDate><atom:link href="https://daizelai.github.io/categories/netstat/" rel="self" type="application/rss+xml" /><item>
  <title>html框架内页刷新页面</title>
  <link>https://daizelai.github.io/posts/web/html/html%E6%A1%86%E6%9E%B6%E5%86%85%E9%A1%B5%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/</link>
  <pubDate>Wed, 19 Oct 2016 21:14:10 &#43;0800</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/web/html/html%E6%A1%86%E6%9E%B6%E5%86%85%E9%A1%B5%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2/</guid>
  <description><![CDATA[一、html框架内页刷新页面 在使用html写后台布局的时候，经常会用到iframe框架，而在iframe框架中经常会用到刷新内页数据的情况，下面就记录一下刷新的js代码。
语句1. window.parent.frames[1].location.reload(); 语句2. window.parent.frames.bottom.location.reload(); 语句3. window.parent.frames[&#34;bottom&#34;].location.reload(); 语句4. window.parent.frames.item(1).location.reload(); 语句5. window.parent.frames.item(&#39;bottom&#39;).location.reload(); 语句6. window.parent.bottom.location.reload(); 语句7. window.parent[&#39;bottom&#39;].location.reload(); ]]></description>
</item>
<item>
  <title>windows下netstat使用手记</title>
  <link>https://daizelai.github.io/posts/windows/windows%E4%B8%8Bnetstat%E4%BD%BF%E7%94%A8%E6%89%8B%E8%AE%B0/</link>
  <pubDate>Thu, 13 Oct 2016 00:00:00 &#43;0000</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/windows/windows%E4%B8%8Bnetstat%E4%BD%BF%E7%94%A8%E6%89%8B%E8%AE%B0/</guid>
  <description><![CDATA[<!-- raw HTML omitted -->
<p>windows下netstat命令的简单使用记录。</p>
<h2 id="一windows下使用">一、windows下使用</h2>
<p>windows下面查看所有端口，然后找到对应的端口和PID。</p>]]></description>
</item>
<item>
  <title>CentOS7一些常用笔记</title>
  <link>https://daizelai.github.io/posts/linux/centos/centos7%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%AC%94%E8%AE%B0/centos7%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%AC%94%E8%AE%B0/</link>
  <pubDate>Sat, 09 Jan 2016 20:33:19 &#43;0800</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/linux/centos/centos7%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%AC%94%E8%AE%B0/centos7%E4%B8%80%E4%BA%9B%E5%B8%B8%E7%94%A8%E7%AC%94%E8%AE%B0/</guid>
  <description><![CDATA[<!-- raw HTML omitted -->
<h2 id="一centos7中启动停止重启服务命令">一、CentOS7中启动/停止/重启服务命令</h2>
<h3 id="11简要">1.1、简要</h3>
<p>CentOS7.0中一个最主要的改变，就是切换到了systemd。它用于替代红帽企业版Linux前任版本中的SysV和Upstart，对系统和服务进行管理。systemd兼容SysV和Linux标准组的启动脚本。</p>
<p>Systemd是一个Linux操作系统下的系统和服务管理器。它被设计成向后兼容SysV启动脚本，并提供了大量的特性，如开机时平行启动系统服务，按需启动守护进程，支持系统状态快照，或者基于依赖的服务控制逻辑。</p>]]></description>
</item>
<item>
  <title>Linux之netstat命令</title>
  <link>https://daizelai.github.io/posts/linux/linux%E4%B9%8Bnetstat%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Sat, 09 Jan 2016 20:33:19 &#43;0800</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/linux/linux%E4%B9%8Bnetstat%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[<h2 id="一netstat命令介绍">一、netstat命令介绍</h2>
<p>在Linux使用过程中，需要了解当前系统开放了哪些端口，并且要查看开放这些端口的具体进程和用户，可以通过netstat命令进行简单查询。</p>]]></description>
</item>
<item>
  <title>Linux之netstat命令</title>
  <link>https://daizelai.github.io/posts/linux/lsyncd%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/linux%E4%B9%8Bnetstat%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Sat, 09 Jan 2016 20:33:19 &#43;0800</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/linux/lsyncd%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/linux%E4%B9%8Bnetstat%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[<h2 id="一netstat命令介绍">一、netstat命令介绍</h2>
<p>在Linux使用过程中，需要了解当前系统开放了哪些端口，并且要查看开放这些端口的具体进程和用户，可以通过netstat命令进行简单查询。</p>]]></description>
</item>
</channel>
</rss>
