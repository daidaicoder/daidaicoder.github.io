<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>php - 分类 - 来来往往</title>
    <link>https://daizelai.github.io/categories/php/</link>
    <description>php - 分类 - 来来往往</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 18 Oct 2016 11:27:46 &#43;0800</lastBuildDate><atom:link href="https://daizelai.github.io/categories/php/" rel="self" type="application/rss+xml" /><item>
  <title>php生成8位随机数</title>
  <link>https://daizelai.github.io/posts/php/php%E7%94%9F%E6%88%908%E4%BD%8D%E9%9A%8F%E6%9C%BA%E6%95%B0/</link>
  <pubDate>Tue, 18 Oct 2016 11:27:46 &#43;0800</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/php/php%E7%94%9F%E6%88%908%E4%BD%8D%E9%9A%8F%E6%9C%BA%E6%95%B0/</guid>
  <description><![CDATA[一、描述 在php中使用随机数
二、随机数 2.1.使用str_shuffle+substr产生8位随机数 $rand = substr(str_shuffle(&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890&#39;),0,8); echo $rand; F97VObtg 2.2.使用rand+pow生成8位随机数 function generate_code($length = 4) { return rand(pow(10,($length-1)), pow(10,$length)-1); } echo generate_code(8); echo &#34;&lt;br /&gt;&#34;; echo rand(pow(10,(8-1)), pow(10, 8)-1); 56469421 70479736 2.3.使用mt_rand生成8位随机数 echo &#34;&lt;br /&gt;&#34;; echo &#34;&lt;br /&gt;&#34;; $a = mt_rand(10000000,99999999); $b = mt_rand(10000000,99999999); echo $a; echo &#34;&lt;br /&gt;&#34;; echo $a.$b; 36816416 3681641615139555 2.4.使用range生成不定长度的随机数 $tmp = range(1,30); echo implode(&#34;&#34;, array_rand($tmp,10)); 051319212225262829 2.5.使用rand生成不定长度的位随机数 echo rand(); echo &#34;&lt;br /&gt;&#34;; echo rand(5, 15); 6135 8 ]]></description>
</item>
<item>
  <title>php获取不到post的json数据的问题</title>
  <link>https://daizelai.github.io/posts/php/php%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0post%E7%9A%84json%E6%95%B0%E6%8D%AE%E7%9A%84%E9%97%AE%E9%A2%98/</link>
  <pubDate>Mon, 17 Oct 2016 15:56:43 &#43;0800</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/php/php%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0post%E7%9A%84json%E6%95%B0%E6%8D%AE%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
  <description><![CDATA[一、描述 php获取post方式的json数据
二、开始 2.1.在做平安wifi认证时，对方说会首先post过来数据，请求格式为json： { &#34;openid&#34;: &#34;4100009820006&#34;, &#34;openkey&#34;: &#34;331224145d4a4bdb8e239cc57e6e010e&#34;, &#34;ip&#34;: &#34;127.0.0.1&#34;, &#34;ssid&#34;: &#34;testSSID&#34; } 2.2.但在test服务器看日志是没有数据的 [ 2016-10-17T15:27:49+08:00 ] /cmps/admin.php/api/login | ERR: array ( ) 2.3.在网关中抓包又是可以看到数据的 网关查看post报文 2.4.问题解决 经过好长一段时间才找到了问题所在，原来在PHP中是不能直接获取post过来的json数据的，PHP 默认只识别 application/x-www.form-urlencoded 标准的数据类型，因此对型如 text/xml 或者 soap 或者 application/octet-stream 之类的内容无法解析，如果用 $_POST 数组来接收就会失败，故保留原型，交给 $GLOBALS[&lsquo;HTTP_RAW_POST_DATA&rsquo;] 来接收。
可以通过下面两种方式来获取。 1.使用file_get_contents(&quot;php://input&quot;)
$post = file_get_contents(&#34;php://input&#34;); log::write(var_export($post,true)); 日志中查看结果：
[ 2016-10-17T15:27:49+08:00 ] /cmps/admin.php/api/login | ERR: &#39;{&#34;openid&#34;:&#34;410003803000 8&#34;,&#34;openkey&#34;:&#34;b983a837a3204b89bc6585905cd7f6ef&#34;,&#34;ip&#34;:&#34;172.16.135.140&#34;,&#34;ssid&#34;:&#34;00000003&#34;}&#39; 2.使用$GLOBALS['HTTP_RAW_POST_DATA']
log::write(var_export($GLOBALS[&#39;HTTP_RAW_POST_DATA&#39;],true)); 日志中查看结果：
[ 2016-10-17T15:27:49+08:00 ] /cmps/admin.php/api/login | ERR: &#39;{&#34;openid&#34;:&#34;410003803000 8&#34;,&#34;openkey&#34;:&#34;b983a837a3204b89bc6585905cd7f6ef&#34;,&#34;ip&#34;:&#34;172.16.135.140&#34;,&#34;ssid&#34;:&#34;00000003&#34;}&#39; 2.5.正常post数据 正常的post方式的报文和上面json格式查看是不一样的，可以看到报文是在url下面那一行查看到的。
105	4.]]></description>
</item>
</channel>
</rss>
