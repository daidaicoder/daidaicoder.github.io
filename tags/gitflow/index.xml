<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>gitflow - 标签 - 来来往往</title>
    <link>https://daizelai.github.io/tags/gitflow/</link>
    <description>gitflow - 标签 - 来来往往</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 14 Apr 2023 16:11:56 &#43;0000</lastBuildDate><atom:link href="https://daizelai.github.io/tags/gitflow/" rel="self" type="application/rss+xml" /><item>
  <title>gitflow记录</title>
  <link>https://daizelai.github.io/posts/git/20230414_1304gitflow%E8%AE%B0%E5%BD%95/gitflow/</link>
  <pubDate>Fri, 14 Apr 2023 16:11:56 &#43;0000</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/git/20230414_1304gitflow%E8%AE%B0%E5%BD%95/gitflow/</guid>
  <description><![CDATA[一、描述 记录git flow的使用
1.2.总结 1.dev-开发分支是从master分支派生的。2.feature-特性分支是从dev-开发分支派生的，feature只是本地分支，不会被上传远端，特殊环境例外。3.feature-特性分支完成时，它被合并到dev-开发分支中。4.feature-特性分支合并完成后删除。4.release-发布分支是从dev-开发分支派生的。5.release-发布分支发布完成时，它被合并到master分支和dev-开发分支中（前提是保证版本的稳定性后再合并到master分支上）。6.release-发布分支合并完成后删除。7.版本出现问题时候则通过master分支派生出hotfixes-紧急分支进行修复，修复完成后将它合并到master分支和dev-开发分支中。8.hotfixes-紧急分支合并完成后删除。 二、常用分支git命令 2.1.新开分支 $ git branch 新分支名#新建分支 develop$ git branch develop 2.2.切换到另一个分支 $ git checkout 分支名#切换到 develop 分支$ git checkout develop 2.3.新开分支并切换到新分支 $ git checkout -b 新分支名#新开 develop 分支，并切换到此分支$ git checkout -b develop 2.4.查看分支列表 头部带 remotes/origin 的，表示远程分支
$ git branch -a 2.5.查看远程分支列表 $ git branch -r daizelai@GBCOM-20210524I MINGW64 /d/code/gbcom_gitlab/WZS2_Android_APP (develop)$ git branch -rorigin/HEAD -&gt; origin/masterorigin/developorigin/masterdaizelai@GBCOM-20210524I MINGW64 /d/code/gbcom_gitlab/WZS2_Android_APP (develop)$ 下面是查看所有分支：]]></description>
</item>
</channel>
</rss>
