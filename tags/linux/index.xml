<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>linux - 标签 - 来来往往</title>
    <link>https://daizelai.github.io/tags/linux/</link>
    <description>linux - 标签 - 来来往往</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 08 Oct 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://daizelai.github.io/tags/linux/" rel="self" type="application/rss+xml" /><item>
  <title>mysql创建用户</title>
  <link>https://daizelai.github.io/posts/mysql/mysqlcreateuser/</link>
  <pubDate>Sat, 08 Oct 2022 00:00:00 &#43;0000</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/mysql/mysqlcreateuser/</guid>
  <description><![CDATA[20221008_1513mysql创建用户 一、描述 by daizelai on 2022/10/08 16:23 创建MYSQL账号的方法记录。
二、创建mysql账号 2.1.使用CREATE USER语句创建新用户 mysql&gt; CREATE USER &#39;daizelai&#39;@&#39;192.168.42.55&#39; IDENTIFIED BY &#39;123456&#39;; 如果创建失败，提示当前密码不满足策略要求。
修改密码策略
mysql&gt; SELECT @@VALIDATE_PASSWORD_POLICY; mysql&gt; set global validate_password_policy = 0; GRANT ALL ON *.* TO &#39;daizelai&#39;@&#39;192.168.42.55&#39;; 在 MySQL 中，可以使用 password() 函数获取密码的哈希值，查看 test1 哈希值的 SQL 语句和执行过程如下：
mysql&gt; SELECT password(&#39;test1&#39;); +-------------------------------------------+ | password(&#39;test1&#39;) | +-------------------------------------------+ | *06C0BF5B64ECE2F648B5F048A71903906BA08E5C | +-------------------------------------------+ 1 row in set, 1 warning (0.00 sec) 创建用户 test1，SQL 语句和执行过程如下：
mysql&gt; CREATE USER &#39;daizelai&#39;@&#39;192.]]></description>
</item>
<item>
  <title>搜索查找记录</title>
  <link>https://daizelai.github.io/posts/linux/linuxsearch/</link>
  <pubDate>Fri, 19 Aug 2022 00:00:00 &#43;0000</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/linux/linuxsearch/</guid>
  <description><![CDATA[搜索查找记录 一、描述 by daizelai on 2021/08/19 16:08
在SC60中搜索和查找相关文件。 关键字：日志搜索、搜索日志、linux搜索
二、在文件内容中查找 $ grep &#34;code&#34; -rni ./$ grep &#34;sdcard u:object_r:rootfs:s0&#34; -nr ./system/[android_SC20@localhost sc60_android_7.1.2_qcom_sz14]$ grep &#34;code&#34; -rni ././kernel/msm-3.18/kernel/power/snapshot.c:837: * initialization code)./kernel/msm-3.18/kernel/power/snapshot.c:1880: info-&gt;version_code = LINUX_VERSION_CODE; 四、gpio查找 gpio查找其实也是在文件内容中查找。
# grep -rn &#34;gpio99&#34; kernel/msm-3.18/arch/arm64/boot/dts/qcom/# grep -rn &#34;tlmm 99&#34; kernel/msm-3.18/arch/arm64/boot/dts/qcom/# grep -rn &#34;&amp;msm_gpio&#34; kernel/msm-3.18/arch/arm64/boot/dts/qcom/ 查找示例：
$ grep -rn &#34;gpio99&#34; kernel/msm-3.18/arch/arm64/boot/dts/qcom/kernel/msm-3.18/arch/arm64/boot/dts/qcom/msm8953-pinctrl.dtsi:470: /*pins = &#34;gpio99&#34;;*/kernel/msm-3.18/arch/arm64/boot/dts/qcom/msm8953-pinctrl.dtsi:475: /*pins = &#34;gpio99&#34;;*/kernel/msm-3.18/arch/arm64/boot/dts/qcom/msm8953-pinctrl.dtsi:936: /*pins = &#34;gpio98&#34;, &#34;gpio99&#34;;*/kernel/msm-3.]]></description>
</item>
<item>
  <title>linux之lsof的使用</title>
  <link>https://daizelai.github.io/posts/linux/lsof/</link>
  <pubDate>Wed, 19 Oct 2016 00:00:00 &#43;0000</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/linux/lsof/</guid>
  <description><![CDATA[<!-- raw HTML omitted -->
<h2 id="一安装lsof">一、安装lsof</h2>
<p>先查看一下<code>lsof</code>命令是否存在。</p>
<pre tabindex="0"><code>[root@localhost lai]# lsof
-bash: lsof: command not found
[root@localhost lai]# whereis lsof
lsof:
</code></pre>]]></description>
</item>
<item>
  <title>Linux之sftp使用</title>
  <link>https://daizelai.github.io/posts/linux/sftp/</link>
  <pubDate>Sat, 08 Oct 2016 00:00:00 &#43;0000</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/linux/sftp/</guid>
  <description><![CDATA[<h2 id="一下载文件">一、下载文件</h2>
<blockquote>
<p>将从远程主机的 <code>/var/www/layne/</code> 目录下将 <code>index.php</code> 下载到本地 <code>/home/layne/</code> 目录下。</p>
</blockquote>
<pre tabindex="0"><code class="language-linux" data-lang="linux">sftp&gt; get /var/www/layne/index.php  /home/layne/
</code></pre>]]></description>
</item>
<item>
  <title>Linux之scp复制远程文件</title>
  <link>https://daizelai.github.io/posts/linux/room/</link>
  <pubDate>Wed, 10 Aug 2016 00:00:00 &#43;0000</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/linux/room/</guid>
  <description><![CDATA[<h3 id="一语法">一、语法</h3>
<p>1.linux 的 scp 命令 可以 在 linux 之间复制 文件 和 目录；<br>
2.scp 可以在 2个 linux 主机间复制文件；<br>
3.命令基本格式：</p>
<blockquote>
<p>scp [可选参数] file_source file_target</p>
</blockquote>
<h3 id="二从-本地-复制到-远程">二、从 本地 复制到 远程</h3>
<p>复制文件：</p>]]></description>
</item>
<item>
  <title>Linux之zip和unzip的使用</title>
  <link>https://daizelai.github.io/posts/linux/zip/</link>
  <pubDate>Sat, 08 Aug 2015 00:00:00 &#43;0000</pubDate>
  <author>作者</author>
  <guid>https://daizelai.github.io/posts/linux/zip/</guid>
  <description><![CDATA[一、zip/unzip命令说明 1.1.功能说明 将一般的文件或者目录进行压缩或者解压，默认生成以“.zip”为后缀的压缩包。zip命令类似于Windows中的winzip压缩程序。其格式如下：
zip [选项] 压缩文件名 需要压缩的文档列表 unzip [选项] 压缩文件名 1.2.zip选项含义 zip选项含义
-r 递归压缩，将指定目录下的所有文件以及子目录全部压缩 -d 从压缩文件内删除指定的文件 -i “文件列表” 只压缩文件列表中的文件 -x “文件列表” 压缩时排除文件列表中指定的文件 -u 更新文件到压缩文件中 -m 将文件加入压缩文件压缩后，删除原始文件，即把文件移到压缩文件中 -F 尝试修复损坏的压缩文件 -T 检查压缩文件内的每个文件是否正确无误 - 压缩级别 压缩级别是一个1～9的数字 1.3.unzip选项含义 unzip选项含义
-x &#34;文件列表&#34; 解压文件，但不包含文件列表中指定的文件 -t 测试压缩文件有无损坏，并不解压 -v 查看压缩文件的详细信息，具体包括压缩文件中包含的文件大小、文件名和压缩比等，并不解压 -n 解压时不覆盖已经存在的文件 -o 解压时覆盖已经存在的文件，并且不要求用户确认 -d 目录名 把压缩文件解压到指定目录下 二、示例 2.1.将lai目录下所有的文件和目录压缩，压缩级别为最高，压缩的文件保存到/root/lai.zip。 [root@localhost lai]# pwd /root/lai [root@localhost lai]# ll 总用量 1024 -rwxr--r--. 1 root root 0 10月 18 11:35 index.php drwxr-xr-x.]]></description>
</item>
</channel>
</rss>
